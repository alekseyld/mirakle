plugins {
    id 'java-gradle-plugin'
}

group rootProject.group
version rootProject.version

gradlePlugin {
    plugins {
        create("miraklePlugin") {
            id = "mirakle-gradle-plugin"
            implementationClass = "Mirakle"
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xno-optimized-callable-references",]
    }
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation libs.kotlin.stdlib
    implementation libs.streamflyer.core
    implementation libs.streamflyer.regex.fast
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
}

publishing {
    publications {
        Mirakle(MavenPublication) {
            from components.java

            artifact sourcesJar

            groupId 'io.github.adambl4'
            artifactId 'mirakle'
            version rootProject.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Gradle plugin to move build process from local to a remote machine.')
                root.appendNode('name', 'Mirakle')
                root.appendNode('url', 'https://github.com/adambl4/mirakle')
                root.children().last() + pomConfig
            }
        }
    }
}

signing {
    sign publishing.publications.Mirakle
}

tasks.register('validatePublishing') {
    doFirst {
        validateTagAndVersion()
        if (gradle.startParameter.configureOnDemand) {
            //WTF https://stackoverflow.com/questions/25668020/gradle-artifactory-plugin-not-generating-pom-file/32064236#comment61270226_32064236
            throw new Exception("Can't upload to bintray with enabled configureOnDemand")
        }
    }
}

publish.dependsOn validatePublishing
